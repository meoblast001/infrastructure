---
- name: Check if Git repository for davical exists
  stat: path=/usr/local/share/davical/.git
  register: davical_repo_exists
  changed_when: False
- name: Install davical from Git
  git: dest=/usr/local/share/davical repo=https://gitlab.com/davical-project/davical.git
  become: yes
  when: davical_repo_exists.stat.exists == False
- name: Make /usr/local/share/davical owned by deploy and setype httpd_sys_content_t
  file: path=/usr/local/share/davical state=directory owner=deploy group=deploy recurse=yes setype=httpd_sys_content_t
  become: yes
- name: Check if Git repository for awl exists
  stat: path=/usr/local/share/awl/.git
  register: awl_repo_exists
  changed_when: False
- name: Install awl for davical from Git
  git: dest=/usr/local/share/awl repo=https://gitlab.com/davical-project/awl.git
  become: yes
  when: awl_repo_exists.stat.exists == False
- name: Determine whether davical database exists
  shell: psql -lqt | cut -d \| -f 1 | grep -qw davical
  changed_when: False
  failed_when: False
  register: db_exists
  become: yes
  become_user: "{{ postgres_user }}"
- name: Install Perl packages (perl-DBI, perl-YAML, perl-DBD-Pg)
  yum: name={{ item }} state=present
  with_items:
    - "perl-DBI"
    - "perl-YAML"
    - "perl-DBD-Pg"
  become: yes
- name: Create database for davical
  shell: ./create-database.sh
  args:
    chdir: /usr/local/share/davical/dba
  when: db_exists.rc == 1
  become: yes
  become_user: "{{ postgres_user }}"
- name: Determine if davical database is owned by application user
  shell: psql -lqt | grep -qw '^\\s*davical' | cut -d \| -f 2 | grep -qw {{ database_owner }}
  changed_when: False
  failed_when: False
  register: db_owned
  become: yes
  become_user: "{{ postgres_user }}"
- name: Give ownership of davical database to application user
  shell: psql -c "ALTER DATABASE davical OWNER TO {{ database_owner }}"
  when: db_owned.rc == 1
  become: yes
  become_user: "{{ postgres_user }}"
- name: Give ownership of davical database contents to application user
  shell: psql davical -c "REASSIGN OWNED BY davical_dba TO {{ database_owner }}"
  when: db_owned.rc == 1
  become: yes
  become_user: "{{ postgres_user }}"
- name: Create /etc/davical
  file: name=/etc/davical state=directory
  become: yes
- name: Install configuration for instances
  template: src=conf.j2 dest=/etc/davical/{{ item['domain_name'] }}-conf.php
  with_items: '{{ instances }}'
  become: yes
